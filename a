float sum_of_array(float(*arr_test)[128][8][8]) {
    float sum = 0.0;

    for (int i = 0; i < 128; ++i) {
        for (int j = 0; j < 8; ++j) {
            for (int k = 0; k < 8; ++k) {
                sum += (*arr_test)[i][j][k];
            }
        }
    }

    return sum;
}

numpy_array = np.random.rand(128, 8, 8).astype(np.float32)

# Convert the NumPy array to a C-compatible pointer
c_array = numpy_array.ctypes.data_as(POINTER(c_void_p))
#%%
# Call the C function with the pointer to the array and its size
lib.sum_of_array.restype = ctypes.c_float
lib.sum_of_array(c_array)
